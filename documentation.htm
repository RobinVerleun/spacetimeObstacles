<h2><a href="./spacetimeObstacles.zip">DOWNLOAD spacetimeObstacles.zip</a></h2>

<h2>General Overview</h2>
Spacetime Obstacles’ is a score based survival game, where the player controls a lone ship in space with the goal of surviving as long as possible. Enemies spawn around the screen and charge straight across the screen, picking up speed on every lap. Eventually, the ships become too fast for the player, the player gets hit, and the game ends.

The goal of the game as the player is to survive as long as you can - this means your will be competing against your own scores, and the score of others. There is no direct ‘winning’ of the game, but the score counter updates in real time and lets the player know how close they are to their goal.


<h2>Target System and Requirements</h2>
The game is only planned to work on Linux distributions. Requirements are a non-factor for a game of this size and detail.
 
<h2>Story</h2>
You play a ship left behind from the rest of your fleet, stalling for time as enemies attempt to destroy you. Your goal is to survive as long as you can!

<h2>Theme: Graphics and Sound</h2>
The game is set in a space-like environment. The background should be indicative of that through pixel placement or image. All sprite on screen should represent some form of space life or spaceship and represent the direction they will be moving in some way.

Music will be electronic and non-aggressive in nature, as it will merely fill the empty air and not assist the player through gameplay.

<h2>Menus</h2>
The <b>introduction menu</b> should welcome the player and demonstrate all available controls for the game, including access to the help menu. It should also quickly blurb the purpose for the player to be doing what they’re doing (see the story).

The <b>help menu</b> will show the user the controls available, as well as how to toggle the help menu and disable/re-enable the music.

The <b>exit menu</b> will show the player their score, and prompt them to restart the game.

<h2>Playing a Game</h2>
The game begins, and the player is introduced to the game. Pressing any key will take the user out of the menu and begin the game. At first, only the player will be on the screen, but enemies will begin to spawn on the edges.

As enemies spawn, the user needs to use a combination of reaction speed and mechanical skill to dodge the enemy sprites which fly across the screen, using the motion controls introduced during the introduction menu.

Upon getting hit, the player will be shown the ending screen and their score. They can then choose to restart the game.

<h2>Characters and NPC Description</h2>
Enemy sprites are non-interactive, and hostile by nature to the player. They are an alien spacecraft which charges across the screen and attempts to hit the player.

<h2>Artificial Intelligence Overview</h2>
The enemies are ‘dumb’ and do not seek out the player - however, they spawn randomly and move across the screen with variable speed. Every time the enemy completes a path across the screen, their speed for future runs in that XY direction will increase, making the enemies unpredictable. 

<h2>Conclusion</h2>
Spacetime Obstacles is a simple top down 2D game which requires reaction time and judgement from the player. It is an exercise in adding user controls to a game and working with fluent sprite manipulation. The game encourages the player to best themselves and others as the driving source of competition, making it more engaging with groups.

<h2>Credits:</h2>

<div>
<a href="https://apod.nasa.gov/apod/ap041104.html">The-Iris-Nebula.png</a>
<p>Image Credit & Copyright: Jim Misti (acquisition), Robert Gendler (processing)</p>
</div>

<div>
<a href="http://millionthvector.blogspot.ca/p/free-sprites.html">Speedship.bmp</a>
<p>Sprite credit to MillionthVector</p>
</div>

<div>
<a href="https://www.freesound.org/people/Flick3r/sounds/48544/">backmusic.wav</a>
<p>WAV music loop credit to Flick</p>
</div>

<div>
<p>Enemy.bmp</p>
<p>Created by Robin Verleun (woo)</p>
</div>

<div>
<p>Game Design and Source Code </p>
<p>Created by Robin Verleun, 2017. </p>
</div>